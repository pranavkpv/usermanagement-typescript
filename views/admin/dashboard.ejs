<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">

    <title>User Management Dashboard</title>
    <style>
        :root {
            --primary: #4f46e5;
            --primary-hover: #4338ca;
            --danger: #ef4444;
            --danger-hover: #dc2626;
            --success: #10b981;
            --success-hover: #059669;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f9fafb;
            color: #111827;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 24px;
        }

        h1 {
            font-size: 24px;
            font-weight: 600;
            margin: 0;
        }

        .search-bar {
            display: flex;
            gap: 8px;
            margin-bottom: 20px;
        }

        input[type="text"] {
            flex: 1;
            padding: 10px 12px;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            font-size: 14px;
        }

        button {
            padding: 10px 16px;
            border: none;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        button.primary {
            background-color: var(--primary);
            color: white;
        }

        button.primary:hover {
            background-color: var(--primary-hover);
        }

        button.danger {
            background-color: var(--danger);
            color: white;
        }

        button.danger:hover {
            background-color: var(--danger-hover);
        }

        button.success {
            background-color: var(--success);
            color: white;
        }

        button.success:hover {
            background-color: var(--success-hover);
        }

        .table-container {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        thead {
            background-color: #f3f4f6;
        }

        th {
            padding: 12px 24px;
            text-align: left;
            font-size: 14px;
            font-weight: 600;
            color: #4b5563;
        }

        td {
            padding: 12px 24px;
            font-size: 14px;
            border-top: 1px solid #e5e7eb;
        }

        .actions {
            display: flex;
            gap: 8px;
        }

        .action-btn {
            background: none;
            border: none;
            padding: 6px;
            cursor: pointer;
            color: #6b7280;
            border-radius: 4px;
        }

        .action-btn:hover {
            background-color: #f3f4f6;
            color: #111827;
        }


        .modal-content {
            background-color: white;
            width: 100%;
            max-width: 500px;
            border-radius: 8px;
            padding: 24px;
        }

        .modal-header {
            margin-bottom: 16px;
        }

        .modal-title {
            font-size: 18px;
            font-weight: 600;
            margin: 0;
        }

        .form-group {
            margin-bottom: 16px;
        }

        label {
            display: block;
            margin-bottom: 6px;
            font-size: 14px;
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 10px 12px;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            font-size: 14px;
            box-sizing: border-box;
        }

        .modal-footer {
            display: flex;
            justify-content: flex-end;
            gap: 8px;
            margin-top: 24px;
        }

        .pagination {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 20px;
        }

        .pagination-info {
            font-size: 14px;
            color: #6b7280;
        }

        .pagination-controls {
            display: flex;
            gap: 8px;
        }

        .pagination-btn {
            padding: 8px 12px;
            background-color: white;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            cursor: pointer;
        }

        .pagination-btn:hover:not(:disabled) {
            background-color: #f3f4f6;
        }

        .pagination-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .delete-modal-content {
            text-align: center;
            padding: 32px 24px;
        }

        .delete-icon {
            display: flex;
            justify-content: center;
            margin-bottom: 16px;
        }

        .delete-icon svg {
            width: 48px;
            height: 48px;
            color: var(--danger);
        }

        .delete-title {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 8px;
        }

        .delete-description {
            color: #6b7280;
            margin-bottom: 24px;
        }

        .delete-actions {
            display: flex;
            justify-content: center;
            gap: 12px;
        }

        .status-badge {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 9999px;
            font-size: 12px;
            font-weight: 500;
        }

        .status-active {
            background-color: #d1fae5;
            color: #065f46;
        }

        .status-inactive {
            background-color: #fef2f2;
            color: #991b1b;
        }

        .status-pending {
            background-color: #fef3c7;
            color: #92400e;
        }
    </style>
</head>

<body>
    <div class="container">
        <header>
            <h1>User Management</h1>
            <button id="add-user-btn" class="primary" data-bs-toggle="modal" data-bs-target="#exampleModal">Add New
                User</button>
        </header>

        <div class="search-bar">
            <input type="text" id="SearchedValue" placeholder="Search by email" value="<%= SearchContent %>">
            <button id="search-btn" class="primary" onclick="searchInput()">Search</button>
        </div>

        <div class="table-container">
            <table>
                <thead>
                    <tr>
                        <th>Email</th>
                        <th>Password</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="users-table-body">
                    <% data.forEach(element => { %>
                    <tr>
                        <td><%= element.username %></td>
                        <td><%= element.password %></td>
                        <td>
                            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal"
                                onclick="editFun('<%= element._id %>','<%= element.username %>','<%= element.password %>')">
                                <i class="bi bi-pencil"></i> Edit
                            </button>
                            <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#delete-modal"
                                onclick="deleteFun('<%= element._id %>')">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </td>
                    </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Add/Edit User Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title" id="modal-title">Add New User</h2>
                </div>
                <form id="user-form">
                    <input type="hidden" id="user-id">
                    <div class="form-group">
                        <label for="name">Email</label>
                        <input type="email" class="form-control" id="username">
                    </div>
                    <div class="form-group">
                        <label for="email">Password</label>
                        <input type="password" class="form-control" id="password">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="danger" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="success" id="save-user-btn">Save User</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="delete-modal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Delete Confirmation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form action="" id="deleteForm">
                    <input type="hidden" id="deleteId">
                    <div class="modal-body">
                        Are you sure you want to delete this item?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('user-form').addEventListener('submit', async (e) => {
            e.preventDefault()

            const username = document.getElementById('username').value
            const password = document.getElementById('password').value
            const userId = document.getElementById('user-id').value
            if (!userId) {
                var response = await fetch('/user/addUser', {
                    method: "POST",
                    headers: { "content-type": "application/json" },
                    body: JSON.stringify({ username, password })
                })
            } else {
                var response = await fetch('/user/editUser', {
                    method: "POST",
                    headers: { "content-type": "application/json" },
                    body: JSON.stringify({ username, password, userId })
                })
            }


            if (!response.ok) {
                const errorData = await response.json();
                console.error('Error:', errorData.message);
                alert(`Error: ${ errorData.message }`);
                return;
            }
            const data = await response.json()
            console.log(data)
            if (response) {
                if (data.message == "should enter username and password" || data.message == "user already exist") {
                    Swal.fire({
                        title: 'warning!',
                        text: data.message,
                        icon: 'warning',
                        confirmButtonText: 'OK'
                    });
                } else {
                    Swal.fire({
                        title: 'success!',
                        text: data.message,
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => e.target.submit())
                }
            }

        })

        function editFun(id, username, password) {
            document.getElementById('user-id').value = id;
            document.getElementById('username').value = username;
            document.getElementById('password').value = password;
            document.getElementById('modal-title').innerHTML = "Edit User"
        }

        function deleteFun(id) {
            document.getElementById('deleteId').value = id
        }

        document.getElementById('deleteForm').addEventListener('submit', async (e) => {
            e.preventDefault()
            const deleteId = document.getElementById('deleteId').value;
            const response = await fetch('/user/delete', {
                method: 'POST',
                headers: {
                    "content-type": "application/json"
                },
                body: JSON.stringify({ deleteId })
            })
            const data = await response.json()
            console.log(data)
            if (response) {
                Swal.fire({
                    title: 'success!',
                    text: data.message,
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then(() => e.target.submit())
            }
        })

        function searchInput() {
            const searchValue = document.getElementById('SearchedValue').value;
            console.log("searchValue ===", searchValue);
            window.location.href = `/admin/dashboard?search=${ encodeURIComponent(searchValue) }`;
        }






    </script>
</body>

</html>